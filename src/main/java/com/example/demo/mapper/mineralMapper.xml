<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.mineralMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.entity.mineral" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="introduction" property="introduction" jdbcType="VARCHAR" />
    <result column="color" property="color" jdbcType="VARCHAR" />
    <result column="jieli" property="jieli" jdbcType="VARCHAR" />
    <result column="tuqi" property="tuqi" jdbcType="VARCHAR" />
    <result column="colorganshe" property="colorganshe" jdbcType="VARCHAR" />
    <result column="xiaoguang" property="xiaoguang" jdbcType="VARCHAR" />
    <result column="shuangjing" property="shuangjing" jdbcType="VARCHAR" />
    <result column="guangxing" property="guangxing" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.example.demo.entity.mineralWithBLOBs" extends="BaseResultMap" >
    <result column="pic1" property="pic1" jdbcType="LONGVARBINARY" />
    <result column="pic2" property="pic2" jdbcType="LONGVARBINARY" />
    <result column="pic3" property="pic3" jdbcType="LONGVARBINARY" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, type, introduction, color, jieli, tuqi, colorganshe, xiaoguang, shuangjing, 
    guangxing
  </sql>
  <sql id="Blob_Column_List" >
    pic1, pic2, pic3
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.example.demo.entity.mineralExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from Mineral
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.demo.entity.mineralExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Mineral
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from Mineral
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from Mineral
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.entity.mineralExample" >
    delete from Mineral
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.mineralWithBLOBs" >
    insert into Mineral (id, name, type, 
      introduction, color, jieli, 
      tuqi, colorganshe, xiaoguang, 
      shuangjing, guangxing, pic1, 
      pic2, pic3)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{introduction,jdbcType=VARCHAR}, #{color,jdbcType=VARCHAR}, #{jieli,jdbcType=VARCHAR}, 
      #{tuqi,jdbcType=VARCHAR}, #{colorganshe,jdbcType=VARCHAR}, #{xiaoguang,jdbcType=VARCHAR}, 
      #{shuangjing,jdbcType=VARCHAR}, #{guangxing,jdbcType=VARCHAR}, #{pic1,jdbcType=LONGVARBINARY}, 
      #{pic2,jdbcType=LONGVARBINARY}, #{pic3,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.mineralWithBLOBs" >
    insert into Mineral
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="introduction != null" >
        introduction,
      </if>
      <if test="color != null" >
        color,
      </if>
      <if test="jieli != null" >
        jieli,
      </if>
      <if test="tuqi != null" >
        tuqi,
      </if>
      <if test="colorganshe != null" >
        colorganshe,
      </if>
      <if test="xiaoguang != null" >
        xiaoguang,
      </if>
      <if test="shuangjing != null" >
        shuangjing,
      </if>
      <if test="guangxing != null" >
        guangxing,
      </if>
      <if test="pic1 != null" >
        pic1,
      </if>
      <if test="pic2 != null" >
        pic2,
      </if>
      <if test="pic3 != null" >
        pic3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null" >
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="color != null" >
        #{color,jdbcType=VARCHAR},
      </if>
      <if test="jieli != null" >
        #{jieli,jdbcType=VARCHAR},
      </if>
      <if test="tuqi != null" >
        #{tuqi,jdbcType=VARCHAR},
      </if>
      <if test="colorganshe != null" >
        #{colorganshe,jdbcType=VARCHAR},
      </if>
      <if test="xiaoguang != null" >
        #{xiaoguang,jdbcType=VARCHAR},
      </if>
      <if test="shuangjing != null" >
        #{shuangjing,jdbcType=VARCHAR},
      </if>
      <if test="guangxing != null" >
        #{guangxing,jdbcType=VARCHAR},
      </if>
      <if test="pic1 != null" >
        #{pic1,jdbcType=LONGVARBINARY},
      </if>
      <if test="pic2 != null" >
        #{pic2,jdbcType=LONGVARBINARY},
      </if>
      <if test="pic3 != null" >
        #{pic3,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.entity.mineralExample" resultType="java.lang.Integer" >
    select count(*) from Mineral
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update Mineral
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.introduction != null" >
        introduction = #{record.introduction,jdbcType=VARCHAR},
      </if>
      <if test="record.color != null" >
        color = #{record.color,jdbcType=VARCHAR},
      </if>
      <if test="record.jieli != null" >
        jieli = #{record.jieli,jdbcType=VARCHAR},
      </if>
      <if test="record.tuqi != null" >
        tuqi = #{record.tuqi,jdbcType=VARCHAR},
      </if>
      <if test="record.colorganshe != null" >
        colorganshe = #{record.colorganshe,jdbcType=VARCHAR},
      </if>
      <if test="record.xiaoguang != null" >
        xiaoguang = #{record.xiaoguang,jdbcType=VARCHAR},
      </if>
      <if test="record.shuangjing != null" >
        shuangjing = #{record.shuangjing,jdbcType=VARCHAR},
      </if>
      <if test="record.guangxing != null" >
        guangxing = #{record.guangxing,jdbcType=VARCHAR},
      </if>
      <if test="record.pic1 != null" >
        pic1 = #{record.pic1,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.pic2 != null" >
        pic2 = #{record.pic2,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.pic3 != null" >
        pic3 = #{record.pic3,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update Mineral
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      introduction = #{record.introduction,jdbcType=VARCHAR},
      color = #{record.color,jdbcType=VARCHAR},
      jieli = #{record.jieli,jdbcType=VARCHAR},
      tuqi = #{record.tuqi,jdbcType=VARCHAR},
      colorganshe = #{record.colorganshe,jdbcType=VARCHAR},
      xiaoguang = #{record.xiaoguang,jdbcType=VARCHAR},
      shuangjing = #{record.shuangjing,jdbcType=VARCHAR},
      guangxing = #{record.guangxing,jdbcType=VARCHAR},
      pic1 = #{record.pic1,jdbcType=LONGVARBINARY},
      pic2 = #{record.pic2,jdbcType=LONGVARBINARY},
      pic3 = #{record.pic3,jdbcType=LONGVARBINARY}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update Mineral
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      introduction = #{record.introduction,jdbcType=VARCHAR},
      color = #{record.color,jdbcType=VARCHAR},
      jieli = #{record.jieli,jdbcType=VARCHAR},
      tuqi = #{record.tuqi,jdbcType=VARCHAR},
      colorganshe = #{record.colorganshe,jdbcType=VARCHAR},
      xiaoguang = #{record.xiaoguang,jdbcType=VARCHAR},
      shuangjing = #{record.shuangjing,jdbcType=VARCHAR},
      guangxing = #{record.guangxing,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.mineralWithBLOBs" >
    update Mineral
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null" >
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="color != null" >
        color = #{color,jdbcType=VARCHAR},
      </if>
      <if test="jieli != null" >
        jieli = #{jieli,jdbcType=VARCHAR},
      </if>
      <if test="tuqi != null" >
        tuqi = #{tuqi,jdbcType=VARCHAR},
      </if>
      <if test="colorganshe != null" >
        colorganshe = #{colorganshe,jdbcType=VARCHAR},
      </if>
      <if test="xiaoguang != null" >
        xiaoguang = #{xiaoguang,jdbcType=VARCHAR},
      </if>
      <if test="shuangjing != null" >
        shuangjing = #{shuangjing,jdbcType=VARCHAR},
      </if>
      <if test="guangxing != null" >
        guangxing = #{guangxing,jdbcType=VARCHAR},
      </if>
      <if test="pic1 != null" >
        pic1 = #{pic1,jdbcType=LONGVARBINARY},
      </if>
      <if test="pic2 != null" >
        pic2 = #{pic2,jdbcType=LONGVARBINARY},
      </if>
      <if test="pic3 != null" >
        pic3 = #{pic3,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.demo.entity.mineralWithBLOBs" >
    update Mineral
    set name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      color = #{color,jdbcType=VARCHAR},
      jieli = #{jieli,jdbcType=VARCHAR},
      tuqi = #{tuqi,jdbcType=VARCHAR},
      colorganshe = #{colorganshe,jdbcType=VARCHAR},
      xiaoguang = #{xiaoguang,jdbcType=VARCHAR},
      shuangjing = #{shuangjing,jdbcType=VARCHAR},
      guangxing = #{guangxing,jdbcType=VARCHAR},
      pic1 = #{pic1,jdbcType=LONGVARBINARY},
      pic2 = #{pic2,jdbcType=LONGVARBINARY},
      pic3 = #{pic3,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.mineral" >
    update Mineral
    set name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      color = #{color,jdbcType=VARCHAR},
      jieli = #{jieli,jdbcType=VARCHAR},
      tuqi = #{tuqi,jdbcType=VARCHAR},
      colorganshe = #{colorganshe,jdbcType=VARCHAR},
      xiaoguang = #{xiaoguang,jdbcType=VARCHAR},
      shuangjing = #{shuangjing,jdbcType=VARCHAR},
      guangxing = #{guangxing,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>